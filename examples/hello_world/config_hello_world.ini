[required]
# Path to the upstream folder and the outputs directory
folder = "examples/hello_world/"
# Name of the observatory
observatory = Keck Observatory
# Today's date
current_day = 2024-08-05

[options]
# Run the autoscheduler code
run_scheduler = True
# Run the plotting suite
run_plots = True
# Run the TTP
run_ttp = False
# Run the bonus round of scheduling
run_bonus_round = True
# Run a weather loss model in the autoscheduler
run_weather_loss = True
# Specify a random seed. In the paper for weather testing, we use 24 through 33
random_seed = 24

[oia]
# Choose the path/filename of the allocation map (for oia, this is over-ridden).
allocation_file = examples/allocations/real_2018B.txt
# Run the optimal instrument allocation mode
run_optimal_allocation = False
# Include aesthetic constraints to the allocation map
run_with_aesthetics = False
# Maximum quarters allowed to be allocated
maximum_allocated_quarters = 10
# Maximum unique nights allowed to be allocated
maximum_allocated_nights = 10
# Allow single quarter nights in the solution
allow_single_quarter_allocations = False
# Must have at least one night on sky every so many days
maximum_consecutive_onsky = 6
# Must be on sky at least once every so many days
minimum_consecutive_offsky = 200
# Require >=1 night allocated within X days of start/end  semester
maximum_baseline = 5

[gurobi]
# % gap between optimal and current solution to stop the solve
max_solve_gap = 0.05
# Maximum time that can be spent solving the model
max_solve_time = 300
# Show the Gurobi output in the terminal
show_gurobi_output = True

[other]
# Size of one slot, in minutes
slot_size = 10
# Starting time of each day (UT)
daily_starting_time = 03:30
# Hours in night
hours_in_night = 14
# Quarters in Night
quarters_in_night = 4
# Percent of request's Nobs the can be scheduled in bonus round
maximum_bonus_size = 0.5
# Run the starmap calculations in plotting, can take a long time
build_starmaps = False
# Create a second, bad weather script of bright stars
generate_backup_script = False
